/**********************************************************************

	--- Qt Architect generated file ---

	File: serverchanneldata.cpp
	Last generated: Sat Jan 17 19:44:55 1998

	DO NOT EDIT!!!  This file will be automatically
	regenerated by qtarch.  All changes will be lost.

 *********************************************************************/

#include "serverchanneldata.h"
#include "../config.h"

#undef Inherited
#define Inherited QFrame

#include <qbuttongroup.h>
#include <qpushbutton.h>
#include <qlayout.h>

#include <klocale.h>

serverchanneldata::serverchanneldata
(
	QWidget* parent,
	const char* name
)
	:
	Inherited( parent, name, 0 )
{

        QGridLayout *lay = new QGridLayout( this, 1, 1, 10);

	QButtonGroup* bg = new 
	  QButtonGroup( i18n("Servers"), this, "ButtonGroup_1" );
	lay->addMultiCellWidget( bg, 0, 7, 0, 3);

	lay->addRowSpacing(1, 5);

	LB_Servers = new QListBox( this, "ListBox_3" );
	LB_Servers->setMultiSelection( FALSE );
	lay->addMultiCellWidget(LB_Servers, 2, 6, 1, 1);

	QPushButton* pb = new 
	  QPushButton( i18n("Delete"), this, "PushButton_4" );
	connect( pb, SIGNAL(clicked()), SLOT(servers_delete()) );
	pb->setAutoRepeat( FALSE );
	lay->addWidget( pb, 2, 2);

	SLE_Servers = new QLineEdit( "", this, "LineEdit_4" );
	connect( SLE_Servers, SIGNAL(textChanged(const QString &)), 
		 SLOT(servers_sle_update(const QString &)) );
	SLE_Servers->setEchoMode( QLineEdit::Normal );
	SLE_Servers->setFrame( TRUE );
	lay->addWidget(SLE_Servers, 4, 2);

	B_AddServers = new 
	  QPushButton( i18n( "Add" ), this, "PushButton_5" );
	connect( B_AddServers, SIGNAL(clicked()), SLOT(servers_add()) );
	B_AddServers->setAutoRepeat( FALSE );
	lay->addWidget(B_AddServers, 6, 2);

	bg->insert( pb );
	bg->insert( B_AddServers );



	bg = new 
	  QButtonGroup( i18n("Channels"), this, "ButtonGroup_2" );
	lay->addMultiCellWidget(bg, 8, 15, 0, 4);

	lay->addRowSpacing ( 9, 5);

	LB_Channels = new QListBox( this, "ListBox_4" );
	LB_Channels->setMultiSelection( FALSE );
	lay->addMultiCellWidget(LB_Channels, 10, 14, 1, 1);

	pb = new 
	  QPushButton( i18n("Delete"), this, "PushButton_1" );
	connect( pb, SIGNAL(clicked()), SLOT(channels_delete()) );
	pb->setAutoRepeat( FALSE );
	lay->addWidget(pb, 10, 2);

	SLE_Channels = new 
	  QLineEdit( "", this, "LineEdit_5" );
	connect( SLE_Channels, SIGNAL(textChanged(const QString &)), 
		 SLOT(channels_sle_update(const QString &)) );
	SLE_Channels->setEchoMode( QLineEdit::Normal );
	SLE_Channels->setFrame( TRUE );
	lay->addWidget(SLE_Channels, 12, 2);

	B_AddChannels = new 
	  QPushButton( i18n( "Add" ), this, "PushButton_2" );
	connect( B_AddChannels, SIGNAL(clicked()), SLOT(channels_add()) );
	B_AddChannels->setAutoRepeat( FALSE );
	lay->addWidget(B_AddChannels, 14, 2);

	bg->insert( pb );
	bg->insert( B_AddChannels );

}


serverchanneldata::~serverchanneldata()
{
}
void serverchanneldata::channels_delete()
{
}
void serverchanneldata::channels_add()
{
}
void serverchanneldata::servers_delete()
{
}
void serverchanneldata::servers_add()
{
}
void serverchanneldata::servers_sle_update(const QString &)
{
}
void serverchanneldata::channels_sle_update(const QString &)
{
}
#include "serverchanneldata.moc"
